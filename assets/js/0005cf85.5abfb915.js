"use strict";(self.webpackChunkaws_blockchain_node_runners=self.webpackChunkaws_blockchain_node_runners||[]).push([[516],{328:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"Blueprints/Vechain","title":"Vechain","description":"","source":"@site/docs/Blueprints/Vechain.md","sourceDirName":"Blueprints","slug":"/Blueprints/Vechain","permalink":"/aws-blockchain-node-runners/docs/Blueprints/Vechain","draft":false,"unlisted":false,"editUrl":"https://github.com/aws-samples/aws-blockchain-node-runners/website/docs/Blueprints/Vechain.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Vechain"},"sidebar":"sidebar","previous":{"title":"Theta","permalink":"/aws-blockchain-node-runners/docs/Blueprints/Theta"},"next":{"title":"WAX","permalink":"/aws-blockchain-node-runners/docs/Blueprints/Wax"}}');var l=t(4848),i=t(8453);function o(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"aws-blockchain-node-runner-for-vechain-nodes",children:"AWS Blockchain Node Runner for Vechain Nodes"})}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsx)(n.tr,{children:(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"Contributed by"})})}),(0,l.jsx)(n.tbody,{children:(0,l.jsx)(n.tr,{children:(0,l.jsx)(n.td,{style:{textAlign:"center"},children:(0,l.jsx)(n.a,{href:"https://github.com/David-O-M",children:"David-O-M)"})})})})]}),"\n",(0,l.jsx)(n.p,{children:"vechain node deployment on AWS. Supports both Authority and Public node types with single node and\nhigh availability (HA) setups."}),"\n",(0,l.jsx)(n.h2,{id:"overview-of-deployment-architectures-for-single-and-ha-setups",children:"Overview of Deployment Architectures for Single and HA setups"}),"\n",(0,l.jsx)(n.h3,{id:"single-node-setup",children:"Single node setup"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"SingleNodeSetup",src:t(5829).A+"",width:"591",height:"411"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["A vechain node deployed in the\n",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html",children:"Default VPC"})," continuously\nsynchronizes with the rest of nodes on the configured vechain network through\n",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html",children:"Internet Gateway"}),"."]}),"\n",(0,l.jsx)(n.li,{children:"The vechain node is used by dApps or development tools internally from within the Default VPC.\nRPC API is not exposed to the Internet directly to protect nodes from unauthorized access."}),"\n",(0,l.jsxs)(n.li,{children:["The vechain node sends various monitoring metrics for both EC2 and node health to Amazon\nCloudWatch. It also supports public snapshot synchronization for faster node startup when ",(0,l.jsx)(n.code,{children:"SYNC_FROM_PUBLIC_SNAPSHOT=true"})," is set in the ",(0,l.jsx)(n.code,{children:".env"})," file (see sample-config files for examples)."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"ha-setup",children:"HA setup"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"\u26a0\ufe0f IMPORTANT:"})," HA setup is ",(0,l.jsx)(n.strong,{children:"NOT supported"})," for Authority node type. If you attempt to deploy HA with Authority nodes, the deployment will fail. Only Public node type supports HA deployment."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{alt:"HaNodeSetup",src:t(923).A+"",width:"1121",height:"681"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["A set of vechain nodes are deployed within an\n",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-groups.html",children:"Auto Scaling Group"}),"\nin the ",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html",children:"Default VPC"}),"\ncontinuously synchronizing with the rest of nodes on the configured vechain network through\n",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html",children:"Internet Gateway"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["The vechain nodes are accessed by dApps or development tools internally through\n",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html",children:"Application Load Balancer"}),".\nRPC API is not exposed to the Internet to protect nodes from unauthorized access."]}),"\n",(0,l.jsxs)(n.li,{children:["The vechain nodes send various monitoring metrics for EC2 to Amazon CloudWatch and support\nautomatic health checks and failover. They also support public snapshot synchronization for faster startup when ",(0,l.jsx)(n.code,{children:"SYNC_FROM_PUBLIC_SNAPSHOT=true"})," is set in the ",(0,l.jsx)(n.code,{children:".env"})," file (see sample-config files for examples)."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Node Types"}),": Support for both Authority and Public node types"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Networks"}),": Mainnet and Testnet support"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Snapshot Sync"}),": Optional public snapshot synchronization for faster startup (controlled by ",(0,l.jsx)(n.code,{children:"SYNC_FROM_PUBLIC_SNAPSHOT"})," flag in ",(0,l.jsx)(n.code,{children:".env"}),", see sample-config files for examples)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Storage Options"}),": EBS volumes (GP3, IO2, IO1) and instance store support"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Health Monitoring"}),": Built-in health checks and CloudWatch metrics"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Auto Scaling"}),": High availability with load balancer and auto scaling groups"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Security"}),": IAM roles, security groups"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"well-architected",children:"Well-Architected"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Review pros and cons of this solution."}),(0,l.jsx)(n.h3,{id:"well-architected-checklist",children:"Well-Architected Checklist"}),(0,l.jsxs)(n.p,{children:["This is the Well-Architected checklist for vechain nodes implementation of the AWS Blockchain Node\nRunner app. This checklist takes into account questions from the\n",(0,l.jsx)(n.a,{href:"https://aws.amazon.com/architecture/well-architected/",children:"AWS Well-Architected Framework"})," which are\nrelevant to this workload."]}),(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Pillar"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Control"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Question/Check"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Remarks"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Security"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Network protection"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Are there unnecessary open ports in security groups?"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"RPC port 80 is open for internal access only. P2P ports are configured for network synchronization."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Traffic inspection"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"AWS WAF could be implemented for traffic inspection. Additional charges will apply."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Compute protection"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Reduce attack surface"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"This solution uses Amazon Linux 2 AMI. You may choose to run hardening scripts on it."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Connection to the instance ?"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"This solution uses AWS Systems Manager for terminal session, not ssh ports."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Data protection at rest"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Use encrypted Amazon Elastic Block Store (Amazon EBS) volumes"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"This solution uses encrypted Amazon EBS volumes."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Use encrypted Amazon Simple Storage Service (Amazon S3) buckets"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"This solution uses Amazon S3 managed keys (SSE-S3) encryption for the assets."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Data protection in transit"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Use TLS"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The AWS Application Load balancer currently uses HTTP listener. Create HTTPS listener with self signed certificate if TLS is desired."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Authorization and access control"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Use instance profile with Amazon Elastic Compute Cloud (Amazon EC2) instances"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"This solution uses AWS Identity and Access Management (AWS IAM) role instead of IAM user."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Following principle of least privilege access"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Privileges are scoped down."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Application security"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Security focused development practices"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"cdk-nag is being used with appropriate suppressions."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Cost optimization"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Service selection"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Use cost effective resources"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Cost efficient instance types are being used, with support for both EBS and instance store options."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Reliability"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Resiliency implementation"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Withstand component failures"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"This solution uses AWS Application Load Balancer with ASG for high availability."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Resource monitoring"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"How are workload resources monitored?"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Resources are being monitored using Amazon CloudWatch dashboards. Amazon CloudWatch custom metrics are being pushed via CloudWatch Agent."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Performance efficiency"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Compute selection"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"How is compute solution selected?"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Compute solution is selected based on best price-performance."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"}}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Storage selection"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"How is storage solution selected?"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Storage solution is selected based on best price-performance with support for both EBS and instance store."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Operational excellence"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Workload health"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"How is health of workload determined?"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Health of workload is determined via AWS Application Load Balancer Target Group Health Checks, on port 80."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Sustainability"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Hardware & services"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Select most efficient hardware for your workload"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Amazon EC2 instances support the Sustainability Pillar by offering efficient resource utilization, potentially reducing overall energy consumption and hardware requirements."})]})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"setup-instructions",children:"Setup Instructions"}),"\n",(0,l.jsx)(n.h3,{id:"open-aws-cloudshell",children:"Open AWS CloudShell"}),"\n",(0,l.jsx)(n.p,{children:"To begin, ensure you login to your AWS account with permissions to create and modify resources in\nIAM, EC2, EBS, VPC, S3, and KMS."}),"\n",(0,l.jsxs)(n.p,{children:["From the AWS Management Console, open the\n",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/cloudshell/latest/userguide/welcome.html",children:"AWS CloudShell"}),", a web-based\nshell environment. If unfamiliar, review the ",(0,l.jsx)(n.a,{href:"https://youtu.be/fz4rbjRaiQM",children:"2-minute YouTube video"}),"\nfor an overview and check out\n",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/cloudshell/latest/userguide/creating-vpc-environment.html",children:"CloudShell with VPC environment"}),"\nthat we'll use to test nodes API from internal IP address space."]}),"\n",(0,l.jsx)(n.p,{children:"Once ready, you can run the commands to deploy and test blueprints in the CloudShell."}),"\n",(0,l.jsx)(n.h3,{id:"clone-this-repository-and-install-dependencies",children:"Clone this repository and install dependencies"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/aws-samples/aws-blockchain-node-runners.git\ncd aws-blockchain-node-runners\nnpm install\n"})}),"\n",(0,l.jsx)(n.h3,{id:"configure-your-setup",children:"Configure your setup"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Make sure you are in the root directory of the cloned repository"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"If you have deleted or don't have the default VPC, create default VPC"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"aws ec2 create-default-vpc\n"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"NOTE:"})," ",(0,l.jsxs)(n.em,{children:["You may see the following error if the default VPC already exists:\n",(0,l.jsx)(n.code,{children:"An error occurred (DefaultVpcAlreadyExists) when calling the CreateDefaultVpc operation: A Default VPC already exists for this account in this region."}),".\nThat means you can just continue with the following steps."]})]}),"\n"]}),"\n",(0,l.jsxs)(n.ol,{start:"3",children:["\n",(0,l.jsx)(n.li,{children:"Configure your setup"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Create your own copy of ",(0,l.jsx)(n.code,{children:".env"})," file and edit it to update with your AWS Account ID and Region:"]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"NOTE:"})," These steps deploy a Public node. To deploy an Authority node, copy ",(0,l.jsx)(n.code,{children:"./sample-configs/.env-authority"})," to ",(0,l.jsx)(n.code,{children:".env"})]}),"\n"]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"NOTE:"})," ",(0,l.jsxs)(n.em,{children:["You can find more examples inside ",(0,l.jsx)(n.code,{children:"sample-configs"})]})]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cd lib/vechain\ncp ./sample-configs/.env-public .env\nnano .env\n"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Deploy common components such as IAM role:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npx cdk deploy vet-common\n"})}),"\n",(0,l.jsx)(n.h3,{id:"deploy-a-single-node",children:"Deploy a Single Node"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Deploy the node"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npx cdk deploy vet-single-node --json --outputs-file single-node-deploy.json\n"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Once the node has started, allow time for the initial synchronization to complete. If you have set\n",(0,l.jsx)(n.code,{children:"SYNC_FROM_PUBLIC_SNAPSHOT=true"})," in your ",(0,l.jsx)(n.code,{children:".env"})," file."]}),"\n",(0,l.jsx)(n.li,{children:"Once the initial synchronization is done, you should be able to access the RPC API of that node\nfrom within the same VPC. The RPC port is not exposed to the Internet. Run the following command\nto retrieve the private IP of the single RPC node you deployed:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export INSTANCE_ID=$(cat single-node-deploy.json | jq -r '.[\"vet-single-node\"].nodeinstanceid')\nNODE_INTERNAL_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[*].Instances[*].PrivateIpAddress' --output text)\necho \"NODE_INTERNAL_IP=$NODE_INTERNAL_IP\"\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Copy output from the last ",(0,l.jsx)(n.code,{children:"echo"})," command with ",(0,l.jsx)(n.code,{children:"NODE_INTERNAL_IP=<internal_IP>"})," and open\n",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/cloudshell/latest/userguide/creating-vpc-environment.html",children:"CloudShell tab with VPC environment"}),"\nto access internal IP address space. Paste ",(0,l.jsx)(n.code,{children:"NODE_INTERNAL_IP=<internal_IP>"})," into the new CloudShell\ntab."]}),"\n",(0,l.jsx)(n.p,{children:"Then query the RPC API to receive the latest block height:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# IMPORTANT: Run from CloudShell VPC environment tab\n# For Public nodes\ncurl -X GET http://$NODE_INTERNAL_IP:80/blocks/best\n# For Authority nodes\ncurl -X GET http://$NODE_INTERNAL_IP:2113/admin/health\n"})}),"\n",(0,l.jsx)(n.h3,{id:"deploy-ha-nodes",children:"Deploy HA Nodes"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Deploy multiple HA Nodes"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pwd\n# Make sure you are in aws-blockchain-node-runners/lib/vechain\nnpx cdk deploy vet-ha-node --json --outputs-file ha-nodes-deploy.json\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Give the new nodes time to initialize"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"To perform an RPC request to your load balancer, run the following command to retrieve the ALB\nURL:"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"export VET_RPC_ALB_URL=$(cat ha-nodes-deploy.json | jq -r '..|.alburl? | select(. != null)')\necho VET_RPC_ALB_URL=$VET_RPC_ALB_URL\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Copy output from the last ",(0,l.jsx)(n.code,{children:"echo"})," command with ",(0,l.jsx)(n.code,{children:"VET_RPC_ALB_URL=<alb_url>"})," and open\n",(0,l.jsx)(n.a,{href:"https://docs.aws.amazon.com/cloudshell/latest/userguide/creating-vpc-environment.html",children:"CloudShell tab with VPC environment"}),"\nto access internal IP address space. Paste ",(0,l.jsx)(n.code,{children:"VET_RPC_ALB_URL=<alb_url>"})," into the VPC CloudShell tab."]}),"\n",(0,l.jsx)(n.p,{children:"Then query the load balancer to retrieve the current block height:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl -X GET http://$VET_RPC_ALB_URL:80/blocks/best\n"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"NOTE:"})," ",(0,l.jsx)(n.em,{children:"By default and for security reasons the load balancer is available only from within the\ndefault VPC in the region where it is deployed. It is not available from the Internet and is not\nopen for external connections. Before opening it up please make sure you protect your RPC APIs."})]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"monitoring-and-cloudwatch-dashboard",children:"Monitoring and CloudWatch Dashboard"}),"\n",(0,l.jsx)(n.p,{children:"The deployment provisions a CloudWatch dashboard with key EC2 and node metrics to help you monitor health and sync progress."}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Included metrics"}),": CPU utilization, IO wait, disk throughput/latency, network in/out, disk used, and ",(0,l.jsx)(n.strong,{children:"vechain Best Block"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Best Block metric"}),": Published as ",(0,l.jsx)(n.code,{children:"CWAgent/vet_best_block"})," with dimension ",(0,l.jsx)(n.code,{children:"InstanceId=${INSTANCE_ID}"})," (stat: Maximum). This reflects the latest block number your node has processed and is useful for tracking sync progress over time."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"How it\u2019s published"}),": A lightweight script runs periodically on the instance to query ",(0,l.jsx)(n.code,{children:"http://localhost/blocks/best"})," and push the value to CloudWatch."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Where to view"}),': In the AWS Console, open CloudWatch \u2192 Dashboards and select the dashboard created for your vechain node stack. The widget is titled "vechain Best Block (number)".']}),"\n"]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"NOTE: Increasing the publishing frequency will increase CloudWatch metrics cost. The default cadence is set conservatively."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"cleaning-up-and-undeploying-everything",children:"Cleaning up and undeploying everything"}),"\n",(0,l.jsx)(n.p,{children:"Destroy HA Nodes, Single Nodes and Common stacks"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pwd\n# Make sure you are in aws-blockchain-node-runners/lib/vechain\n\n# Destroy HA Nodes\nnpx cdk destroy vet-ha-node\n\n# Destroy Single Node\nnpx cdk destroy vet-single-node\n\n# Delete all common components like IAM role and Security Group\nnpx cdk destroy vet-common\n"})}),"\n",(0,l.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,l.jsx)(n.p,{children:"Run tests for vechain:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cd lib/vechain\nnpx jest\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Tests use the ",(0,l.jsx)(n.code,{children:".env-test"})," file in the ",(0,l.jsx)(n.code,{children:"test/"})," directory. Update ",(0,l.jsx)(n.code,{children:"AWS_ACCOUNT_ID"})," and ",(0,l.jsx)(n.code,{children:"AWS_REGION"})," before running."]}),"\n",(0,l.jsx)(n.h3,{id:"faq",children:"FAQ"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"How to check the logs from the EC2 user-data script?"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'pwd\n# Make sure you are in aws-blockchain-node-runners/lib/vechain\n\nexport INSTANCE_ID=$(cat single-node-deploy.json | jq -r \'.["vet-single-node"].nodeinstanceid\')\necho "INSTANCE_ID=" $INSTANCE_ID\naws ssm start-session --target $INSTANCE_ID --region $AWS_REGION\nsudo cat /var/log/cloud-init-output.log\nsudo cat /var/log/user-data.log\n'})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"How can I change vechain node configuration?"}),"\n",(0,l.jsxs)(n.p,{children:["Configure your vechain node in the ",(0,l.jsx)(n.code,{children:".env"})," file by specifying the network and node type:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'VET_NETWORK="testnet"\nVET_NODE_TYPE="public"\nSYNC_FROM_PUBLIC_SNAPSHOT="true"\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"What instance types support instance store?"}),"\n",(0,l.jsxs)(n.p,{children:["For a complete and up-to-date list of all AWS instance types that support instance store, see the\n",(0,l.jsx)(n.a,{href:"https://aws.amazon.com/ec2/instance-types/#Instance_Storage",children:"AWS Instance Types with Instance Store"}),"\npage."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"How does snapshot synchronization work?"}),"\n",(0,l.jsxs)(n.p,{children:["When ",(0,l.jsx)(n.code,{children:"SYNC_FROM_PUBLIC_SNAPSHOT=true"})," is set in your ",(0,l.jsx)(n.code,{children:".env"})," file (see sample-config files for examples), the node will:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Download the appropriate snapshot from vechain Labs based on your node type and network:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Authority + Mainnet"}),": ",(0,l.jsx)(n.code,{children:"https://snapshots.vechainlabs.io/node-authority-mainnet.tar.zst"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Authority + Testnet"}),": ",(0,l.jsx)(n.code,{children:"https://snapshots.vechainlabs.io/node-authority-testnet.tar.zst"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Public + Mainnet"}),": ",(0,l.jsx)(n.code,{children:"https://snapshots.vechainlabs.io/node-hosting-mainnet.tar.zst"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Public + Testnet"}),": ",(0,l.jsx)(n.code,{children:"https://snapshots.vechainlabs.io/node-hosting-testnet.tar.zst"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Extract the snapshot data to ",(0,l.jsx)(n.code,{children:"/thor"})]}),"\n",(0,l.jsxs)(n.li,{children:["Start the node with the pre-synced data for faster startup.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"docker compose up -d\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"What ports are used?"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Authority Node:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Port 2113"}),": Metrics endpoint"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Port 11235"}),": P2P communication (TCP/UDP)"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Public Node:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Port 80"}),": RPC API endpoint"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Port 2113"}),": Metrics endpoint"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Port 11235"}),": P2P communication (TCP/UDP)"]}),"\n"]}),"\n"]}),"\n"]})]})}function r(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}const c={sidebar_label:"Vechain"},d="",a={},h=[{value:"Overview of Deployment Architectures for Single and HA setups",id:"overview-of-deployment-architectures-for-single-and-ha-setups",level:2},{value:"Single node setup",id:"single-node-setup",level:3},{value:"HA setup",id:"ha-setup",level:3},{value:"Features",id:"features",level:2},{value:"Well-Architected",id:"well-architected",level:2},{value:"Well-Architected Checklist",id:"well-architected-checklist",level:3},{value:"Setup Instructions",id:"setup-instructions",level:2},{value:"Open AWS CloudShell",id:"open-aws-cloudshell",level:3},{value:"Clone this repository and install dependencies",id:"clone-this-repository-and-install-dependencies",level:3},{value:"Configure your setup",id:"configure-your-setup",level:3},{value:"Deploy a Single Node",id:"deploy-a-single-node",level:3},{value:"Deploy HA Nodes",id:"deploy-ha-nodes",level:3},{value:"Monitoring and CloudWatch Dashboard",id:"monitoring-and-cloudwatch-dashboard",level:3},{value:"Cleaning up and undeploying everything",id:"cleaning-up-and-undeploying-everything",level:3},{value:"Testing",id:"testing",level:2},{value:"FAQ",id:"faq",level:3}];function u(e){const n={h1:"h1",header:"header",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:""})}),"\n","\n",(0,l.jsx)(r,{})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},923:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/ha-architecture-3f04e09f3048c739a1c27f58d5162f33.png"},5829:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/single-node-architecture-03a37b90ed301e6077c529a7c7d64d58.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var s=t(6540);const l={},i=s.createContext(l);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);