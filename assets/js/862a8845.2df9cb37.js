"use strict";(self.webpackChunkaws_blockchain_node_runners=self.webpackChunkaws_blockchain_node_runners||[]).push([[595],{7784:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"Blueprints/Tezos","title":"Tezos","description":"","source":"@site/docs/Blueprints/Tezos.md","sourceDirName":"Blueprints","slug":"/Blueprints/Tezos","permalink":"/aws-blockchain-node-runners/docs/Blueprints/Tezos","draft":false,"unlisted":false,"editUrl":"https://github.com/aws-samples/aws-blockchain-node-runners/website/docs/Blueprints/Tezos.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Tezos"},"sidebar":"sidebar","previous":{"title":"Sui","permalink":"/aws-blockchain-node-runners/docs/Blueprints/Sui"},"next":{"title":"Theta","permalink":"/aws-blockchain-node-runners/docs/Blueprints/Theta"}}');var t=s(4848),l=s(8453);function i(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"sample-aws-blockchain-node-runner-app-for-tezos-nodes",children:"Sample AWS Blockchain Node Runner app for Tezos Nodes"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Contributed by"})})}),(0,t.jsx)(n.tbody,{children:(0,t.jsx)(n.tr,{children:(0,t.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,t.jsx)(n.a,{href:"https://github.com/AhGhanima",children:"@AhGhanima"}),", ",(0,t.jsx)(n.a,{href:"https://github.com/chrisdotn",children:"@chrisdotn"})]})})})]}),"\n",(0,t.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,t.jsx)(n.p,{children:"This blueprint has two options for running nodes. You can set up a single JSON RPC node or multiple nodes in highly-available setup. The details are below."}),"\n",(0,t.jsx)(n.h3,{id:"single-rpc-node-setup",children:"Single RPC node setup"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"SingleNodeSetup",src:s(1205).A+"",width:"702",height:"461"})}),"\n",(0,t.jsx)(n.p,{children:"This setup is for small scale PoC or development environments. It deploys a single EC2 instance with the tezos client. The RPC port is exposed only to internal IP range of the VPC, while P2P ports allow external access to keep the client synced."}),"\n",(0,t.jsx)(n.h3,{id:"highly-available-setup",children:"Highly available setup"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Architecture",src:s(1836).A+"",width:"1412",height:"611"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"An ongoing data synchronization process is configured with nodes in the Tezos network with a sync node and RPC nodes."}),"\n",(0,t.jsx)(n.li,{children:"The sync node is used to create a copy of node's state data in Amazon S3 bucket."}),"\n",(0,t.jsx)(n.li,{children:"When new RPC nodes are provisioned, they copy state data from Amazon S3 bucket to speed up the initial sync process."}),"\n",(0,t.jsx)(n.li,{children:"Applications and smart contract development tools access highly available RPC nodes behind the Application Load Balancer."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"solution-walkthrough",children:"Solution Walkthrough"}),"\n",(0,t.jsx)(n.h3,{id:"open-aws-cloudshell",children:"Open AWS CloudShell"}),"\n",(0,t.jsx)(n.p,{children:"To begin, ensure you login to your AWS account with permissions to create and modify resources in IAM, EC2, EBS, VPC, S3, KMS, and Secrets Manager."}),"\n",(0,t.jsxs)(n.p,{children:["From the AWS Management Console, open the ",(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/cloudshell/latest/userguide/welcome.html",children:"AWS CloudShell"}),", a web-based shell environment. If unfamiliar, review the ",(0,t.jsx)(n.a,{href:"https://youtu.be/fz4rbjRaiQM",children:"2-minute YouTube video"})," for an overview and check out ",(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/cloudshell/latest/userguide/creating-vpc-environment.html",children:"CloudShell with VPC environment"})," that we'll use to test nodes API from internal IP address space."]}),"\n",(0,t.jsx)(n.p,{children:"Once ready, you can run the commands to deploy and test blueprints in the CloudShell."}),"\n",(0,t.jsx)(n.h3,{id:"clone-this-repository-and-install-dependencies",children:"Clone this repository and install dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/aws-samples/aws-blockchain-node-runners.git\ncd aws-blockchain-node-runners\nnpm install\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," In this tutorial we will set all major configuration through environment variables, but you also can modify parameters in ",(0,t.jsx)(n.code,{children:"config/config.ts"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"prepare-to-deploy-nodes",children:"Prepare to deploy nodes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Make sure you are in the root directory of the cloned repository"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If you have deleted or don't have the default VPC, create default VPC"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"aws ec2 create-default-vpc\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," ",(0,t.jsxs)(n.em,{children:["You may see the following error if the default VPC already exists: ",(0,t.jsx)(n.code,{children:"An error occurred (DefaultVpcAlreadyExists) when calling the CreateDefaultVpc operation: A Default VPC already exists for this account in this region."}),". That means you can just continue with the following steps."]})]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," ",(0,t.jsxs)(n.em,{children:["The default VPC must have at least two public subnets in different Availability Zones, and public subnet must set ",(0,t.jsx)(n.code,{children:"Auto-assign public IPv4 address"})," to ",(0,t.jsx)(n.code,{children:"YES"}),"."]})]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Configure  your setup"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Create your own copy of ",(0,t.jsx)(n.code,{children:".env"})," file and edit it:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Make sure you are in aws-blockchain-node-runners/lib/tezos\ncd lib/tezos\npwd\ncp ./sample-configs/.env-sample-full .env\nnano .env\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," ",(0,t.jsxs)(n.em,{children:["You can find more examples inside the ",(0,t.jsx)(n.code,{children:"sample-configs"})," directory."]})]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"Deploy common components such as IAM role, and Amazon S3 bucket to store data snapshots"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pwd\n# Make sure you are in aws-blockchain-node-runners/lib/tezos\nnpx cdk deploy tz-common\n"})}),"\n",(0,t.jsx)(n.h3,{id:"option-1-single-rpc-node",children:"Option 1: Single RPC Node"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Deploy Single RPC Node"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pwd\n# Make sure you are in aws-blockchain-node-runners/lib/tezos\nnpx cdk deploy tz-single-node --json --outputs-file single-node-deploy.json\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," ",(0,t.jsxs)(n.em,{children:["The default VPC must have at least two public subnets in different Availability Zones, and public subnet must set ",(0,t.jsx)(n.code,{children:"Auto-assign public IPv4 address"})," to ",(0,t.jsx)(n.code,{children:"YES"}),"."]})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The EC2 instance will deploy, initialize the node and start the first sync. In Cloudformation the instance will show as successful once the node is running. From that point it still takes a while until the node is synced to the blockchain. You can check the sync status with the REST call below in step 4. If the `curl cannot connect to the node on port 8732, then the node is still importing. Once that's done, the curl command works."}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"After starting the node you need to wait for the inital syncronization process to finish. It may take from an hour to half a day depending on the the state of the network. You can use Amazon CloudWatch to track the progress. To see them:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Navigate to ",(0,t.jsx)(n.a,{href:"https://console.aws.amazon.com/cloudwatch/",children:"CloudWatch service"})," (make sure you are in the region you have specified for ",(0,t.jsx)(n.code,{children:"AWS_REGION"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Open ",(0,t.jsx)(n.code,{children:"Dashboards"})," and select ",(0,t.jsx)(n.code,{children:"tz-single-node-<type>-<network>"})," from the list of dashboards."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Once the initial synchronization is done, you should be able to access the RPC API of that node from within the same VPC. The RPC port is not exposed to the Internet. Run the following query against the private IP of the single RPC node you deployed:"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"INSTANCE_ID=$(cat single-node-deploy.json | jq -r '..|.singleinstanceid? | select(. != null)')\nNODE_INTERNAL_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[*].Instances[*].PrivateIpAddress' --output text)\necho \"NODE_INTERNAL_IP=$NODE_INTERNAL_IP\"\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Copy output from the last ",(0,t.jsx)(n.code,{children:"echo"})," command with ",(0,t.jsx)(n.code,{children:"NODE_INTERNAL_IP=<internal_IP>"})," and open ",(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/cloudshell/latest/userguide/creating-vpc-environment.html",children:"CloudShell tab with VPC environment"})," to access internal IP address space. Paste ",(0,t.jsx)(n.code,{children:"NODE_INTERNAL_IP=<internal_IP>"})," into the new CloudShell tab. Then query the API:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# IMPORTANT: Run from CloudShell VPC environment tab\n# We query if the node is synced to main\ncurl http://$NODE_INTERNAL_IP:8732/chains/main/is_bootstrapped\n"})}),"\n",(0,t.jsx)(n.p,{children:"The result should be like this (the actual balance might change):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'{"bootstrapped":true,"sync_state":"synced"}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"option-2-highly-available-rpc-nodes",children:"Option 2: Highly Available RPC Nodes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Deploy Snapshot Node"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pwd\n# Make sure you are in aws-blockchain-node-runners/lib/tezos\nnpx cdk deploy tz-snapshot-node --json --outputs-file sync-node-deploy.json\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," ",(0,t.jsxs)(n.em,{children:["The default VPC must have at least two public subnets in different Availability Zones, and public subnet must set ",(0,t.jsx)(n.code,{children:"Auto-assign public IPv4 address"})," to ",(0,t.jsx)(n.code,{children:"YES"}),"."]})]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"After starting the node you need to wait for the inital syncronization process to finish. It may take from an hour to half a day depending the state of the network. You can use Amazon CloudWatch to track the progress. To see them:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Navigate to ",(0,t.jsx)(n.a,{href:"https://console.aws.amazon.com/cloudwatch/",children:"CloudWatch service"})," (make sure you are in the region you have specified for ",(0,t.jsx)(n.code,{children:"AWS_REGION"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Open ",(0,t.jsx)(n.code,{children:"Dashboards"})," and select ",(0,t.jsx)(n.code,{children:"tz-snapshot-node-<type>-<network>"})," from the list of dashboards."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Once synchronization process is over, the script will automatically stop the client and copy all the contents of the ",(0,t.jsx)(n.code,{children:"/data"})," directory to your snapshot S3 bucket. That may take from 30 minutes to about 2 hours. During the process on the dashboard you will see lower CPU and RAM utilization but high data disc throughput and outbound network traffic. The script will automatically start the clients after the process is done."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," ",(0,t.jsxs)(n.em,{children:["The snapshot backup process will automatically run ever day at midnight time of the time zone were the sync node runs. To change the schedule, modify ",(0,t.jsx)(n.code,{children:"crontab"})," of the root user on the node's EC2 instance."]})]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Configure and deploy 2 RPC Nodes"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pwd\n# Make sure you are in aws-blockchain-node-runners/lib/tezos\nnpx cdk deploy tz-ha-nodes --json --outputs-file rpc-node-deploy.json\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"Give the new RPC nodes about an hour to initialize and then run the following query against the load balancer behind the RPC node created"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RPC_ABL_URL=$(cat rpc-node-deploy.json | jq -r '..|.alburl? | select(. != null)')\necho RPC_ALB_URL=$RPC_ALB_URL\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# IMPORTANT: Run from CloudShell VPC environment tab\ncurl http://$RPC_ABL_URL:8732/chains/main/is_bootstrapped\n"})}),"\n",(0,t.jsx)(n.p,{children:"The result should be like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'{"bootstrapped":true,"sync_state":"synced"}\n'})}),"\n",(0,t.jsx)(n.p,{children:"If the nodes are still starting and catching up with the chain, you will see the following repsonse:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-HTML",children:"   <html>\n   <head><title>503 Service Temporarily Unavailable</title></head>\n   <body>\n   <center><h1>503 Service Temporarily Unavailable</h1></center>\n   </body>\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," ",(0,t.jsx)(n.em,{children:"By default and for security reasons the load balancer is available only from within the default VPC in the region where it is deployed. It is not available from the Internet and is not open for external connections. Before opening it up please make sure you protect your RPC APIs."})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"clearing-up-and-undeploying-everything",children:"Clearing up and undeploying everything"}),"\n",(0,t.jsx)(n.p,{children:"Destroy RPC Nodes, HA Nodes and Common components"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Setting the AWS account id and region in case local .env file is lost\nexport AWS_ACCOUNT_ID=<your_target_AWS_account_id>\nexport AWS_REGION=<your_target_AWS_region>\n\npwd\n# Make sure you are in aws-blockchain-node-runners/lib/tezos\n\n# Destroy Single RPC Node\ncdk destroy tz-single-node\n\n# Destroy RPC Nodes\ncdk destroy tz-ha-nodes\n\n# Destroy Sync Node\ncdk destroy tz-snapshot-node\n\n# You need to manually delete an s3 bucket with a name similar to 'tz-snapshots-$accountid-tz-nodes-common' on the console,firstly empty the bucket,secondly delete the bucket,and then execute\n# Delete all common components like IAM role and Security Group\ncdk destroy tz-common\n"})}),"\n",(0,t.jsx)(n.h3,{id:"faq",children:"FAQ"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"How to check the logs from the EC2 user-data script?"}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," ",(0,t.jsxs)(n.em,{children:["In this tutorial we chose not to use SSH and use Session Manager instead. That allows you to log all sessions in AWS CloudTrail to see who logged into the server and when. If you receive an error similar to ",(0,t.jsx)(n.code,{children:"SessionManagerPlugin is not found"}),", ",(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html",children:"install Session Manager plugin for AWS CLI"})]})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pwd\n# Make sure you are in aws-blockchain-node-runners/lib/tezos\n\nexport INSTANCE_ID=$(cat single-node-deploy.json | jq -r '..|.single-node-instance-id? | select(. != null)')\necho \"INSTANCE_ID=\" $INSTANCE_ID\naws ssm start-session --target $INSTANCE_ID --region $AWS_REGION\nsudo cat /var/log/cloud-init-output.log\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"How can check the status of the node service?"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export INSTANCE_ID=$(cat single-node-deploy.json | jq -r '..|.node-instance-id? | select(. != null)')\necho \"INSTANCE_ID=\" $INSTANCE_ID\naws ssm start-session --target $INSTANCE_ID --region $AWS_REGION\nsudo systemctl status node\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"How to check the logs of the clients running on my node?"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pwd\n# Make sure you are in aws-blockchain-node-runners/lib/solana\n\nexport INSTANCE_ID=$(cat single-node-deploy.json | jq -r '..|.node-instance-id? | select(. != null)')\necho \"INSTANCE_ID=\" $INSTANCE_ID\naws ssm start-session --target $INSTANCE_ID --region $AWS_REGION\nsudo su bcuser\nsudo journalctl -o cat -fu node\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"How to check the logs of data backup service on sync node?"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pwd\n# Make sure you are in aws-blockchain-node-runners/lib/solana\n\nexport INSTANCE_ID=$(cat sync-node-deploy.json | jq -r '..|.node-instance-id? | select(. != null)')\necho \"INSTANCE_ID=\" $INSTANCE_ID\naws ssm start-session --target $INSTANCE_ID --region $AWS_REGION\nsudo su bcuser\nsudo journalctl -o cat -fu s3-sync\n"})})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}const r={sidebar_label:"Tezos"},c="",d={},h=[{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Single RPC node setup",id:"single-rpc-node-setup",level:3},{value:"Highly available setup",id:"highly-available-setup",level:3},{value:"Solution Walkthrough",id:"solution-walkthrough",level:2},{value:"Open AWS CloudShell",id:"open-aws-cloudshell",level:3},{value:"Clone this repository and install dependencies",id:"clone-this-repository-and-install-dependencies",level:3},{value:"Prepare to deploy nodes",id:"prepare-to-deploy-nodes",level:3},{value:"Option 1: Single RPC Node",id:"option-1-single-rpc-node",level:3},{value:"Option 2: Highly Available RPC Nodes",id:"option-2-highly-available-rpc-nodes",level:3},{value:"Clearing up and undeploying everything",id:"clearing-up-and-undeploying-everything",level:3},{value:"FAQ",id:"faq",level:3}];function u(e){const n={h1:"h1",header:"header",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:""})}),"\n","\n",(0,t.jsx)(a,{})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1836:(e,n,s)=>{s.d(n,{A:()=>o});const o=s.p+"assets/images/Architecture-HA-fea4b247daebaeb157ca897d3d0acf07.png"},1205:(e,n,s)=>{s.d(n,{A:()=>o});const o=s.p+"assets/images/Architecture-Single-35447f686ea05b6424b507e85d558f2f.png"},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var o=s(6540);const t={},l=o.createContext(t);function i(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);